alias slave d0
alias dial d1
alias button d2
alias display d3
alias vendingMachine d4
alias sorter d5

alias hash r8
alias quantity r9
alias lastIndex r10
alias typeCount r11

define sorterReturn 1

reset:
s dial Mode typeCount
s dial Setting 1
s display Color 2
s slave Setting 0

idleLoop:
yield

ls r0 sorter 0 Occupied
bnezal r0 _importStack

l r0 dial Setting
beqz r0 stageInventoryCheck
beq r0 lastIndex lookupEnd
mul sp r0 2
sub sp sp 1
peek hash
add sp sp 1
peek quantity
s display Setting quantity
s db Setting hash
j lookupEnd
stageInventoryCheck:
s db Setting 0
s display Setting 0
lookupEnd:
l r1 button Setting
beqz r1 idleLoop
beqz r0 checkInventory

s display Color 0
s dial Mode quantity
min r0 quantity 50
s dial Setting r0
s slave Setting 1

awaitAmount:
yield
l quantity dial Setting
l r0 button Setting
beqz r0 awaitAmount
s display Color 3

move r0 4
emptyImportLoop:
yield
ls r1 sorter 0 Occupied
bnezal r1 _importStack
sub r0 r0 1
bgtz r0 emptyImportLoop

div r0 quantity 1000
sltz r1 hash
select r1 r1 -1 1
mul r0 r0 r1
add r0 hash r0
s slave Setting r0
jal _awaitSlave
j reset

checkInventory:
move typeCount 0
move r0 1
nextSlotLoop:
add r0 r0 1
bgt r0 101 defrag
ls r1 vendingMachine r0 Occupied
beqz r1 nextSlotLoop
ls hash vendingMachine r0 OccupantHash
ls quantity vendingMachine r0 Quantity
jal _record
blt r0 101 nextSlotLoop

defrag:
move sp -1
defragLoop:
add sp sp 2
peek r0
beqz r0 reset
s slave Setting r0
jal _awaitSlave
j defragLoop

_importStack:
ls hash sorter 0 OccupantHash
ls quantity sorter 0 Quantity
s sorter Output sorterReturn
jal _record
j ra

_record:
move sp -1
findHash:
add sp sp 2
peek r4
beqz r4 addHash
bne r4 hash findHash
push quantity
j ra
addHash:
add typeCount typeCount 1
sub sp sp 1
push hash
push quantity
push 0
j ra

_awaitSlave:
yield
l r4 slave Setting
bnez r4 _awaitSlave
j ra
